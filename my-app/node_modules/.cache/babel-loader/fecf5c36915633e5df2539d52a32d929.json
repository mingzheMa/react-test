{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/marx/Downloads/react-test/practice/react/my-app/src/components/Context/index.js\";\nimport React, { Component } from \"react\";\nimport { ctx } from \"./context\";\n\nfunction A() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(B, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(C, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(D, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_c = A;\n\nclass B extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"a:\", this.context.a, \",b:\", this.context.b, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.context.add,\n        children: \"a++\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nB.contextType = ctx;\n\nclass C extends Component {\n  render() {\n    return (\n      /*#__PURE__*/\n      // 以下两种写法均可\n      //   <ctx.Consumer>\n      //     {val => (\n      //       <div>\n      //         a:{val.a},b:{val.b}\n      //         <button onClick={val.add}>a++</button>\n      //       </div>\n      //     )}\n      //   </ctx.Consumer>\n      _jsxDEV(ctx.Consumer, {\n        children: val => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"a:\", val.a, \",b:\", val.b, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: val.add,\n            children: \"a++\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this)\n    );\n  }\n\n} // 函数组件获取上下文中的数据\n\n\nfunction D() {\n  return /*#__PURE__*/_jsxDEV(ctx.Consumer, {\n    children: val => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u7EC4\\u4EF6D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"a:\", val.a]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"a:\", val.b]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = D;\nexport default class Context extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      a: 123,\n      b: \"345\",\n      add: () => {\n        this.setState({\n          a: this.state.a + 1\n        });\n      }\n    };\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      // ctx.Provider 不要使用多次，如果在别的组件也需要使用这个ctx.Provider，应该提升到更高的组件（两个组件的父组件中）\n      _jsxDEV(ctx.Provider, {\n        value: this.state,\n        children: /*#__PURE__*/_jsxDEV(A, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }, this)\n    );\n  }\n\n}\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"A\");\n$RefreshReg$(_c2, \"D\");","map":{"version":3,"sources":["/Users/marx/Downloads/react-test/practice/react/my-app/src/components/Context/index.js"],"names":["React","Component","ctx","A","B","render","context","a","b","add","contextType","C","val","D","Context","state","setState"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,QAAoB,WAApB;;AAEA,SAASC,CAAT,GAAa;AACX,sBACE;AAAA,4BACE,QAAC,CAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,CAAD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,CAAD;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,kBADF;AAOD;;KARQA,C;;AAUT,MAAMC,CAAN,SAAgBH,SAAhB,CAA0B;AAGxBI,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,uBACK,KAAKC,OAAL,CAAaC,CADlB,SACwB,KAAKD,OAAL,CAAaE,CADrC,eAEE;AAAQ,QAAA,OAAO,EAAE,KAAKF,OAAL,CAAaG,GAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AAVuB;;AAApBL,C,CACGM,W,GAAcR,G;;AAYvB,MAAMS,CAAN,SAAgBV,SAAhB,CAA0B;AACxBI,EAAAA,MAAM,GAAG;AACP;AAAA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAC,GAAD,CAAK,QAAL;AACE,QAAA,QAAQ,EAAEO,GAAG,iBACX;AAAA,2BACKA,GAAG,CAACL,CADT,SACeK,GAAG,CAACJ,CADnB,eAEE;AAAQ,YAAA,OAAO,EAAEI,GAAG,CAACH,GAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AAVF;AAmBD;;AArBuB,C,CAwB1B;;;AACA,SAASI,CAAT,GAAa;AACX,sBACE,QAAC,GAAD,CAAK,QAAL;AAAA,cACGD,GAAG,iBACF;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,yBAAMA,GAAG,CAACL,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,yBAAMK,GAAG,CAACJ,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;MAZQK,C;AAcT,eAAe,MAAMC,OAAN,SAAsBb,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC7Cc,KAD6C,GACrC;AACNR,MAAAA,CAAC,EAAE,GADG;AAENC,MAAAA,CAAC,EAAE,KAFG;AAGNC,MAAAA,GAAG,EAAE,MAAM;AACT,aAAKO,QAAL,CAAc;AACZT,UAAAA,CAAC,EAAE,KAAKQ,KAAL,CAAWR,CAAX,GAAe;AADN,SAAd;AAGD;AAPK,KADqC;AAAA;;AAW7CF,EAAAA,MAAM,GAAG;AACP;AAAA;AACE;AACA,cAAC,GAAD,CAAK,QAAL;AAAc,QAAA,KAAK,EAAE,KAAKU,KAA1B;AAAA,+BACE,QAAC,CAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAFF;AAMD;;AAlB4C","sourcesContent":["import React, { Component } from \"react\";\nimport { ctx } from \"./context\";\n\nfunction A() {\n  return (\n    <>\n      <B />\n      <C />\n      <D />\n    </>\n  );\n}\n\nclass B extends Component {\n  static contextType = ctx;\n\n  render() {\n    return (\n      <div>\n        a:{this.context.a},b:{this.context.b}\n        <button onClick={this.context.add}>a++</button>\n      </div>\n    );\n  }\n}\n\nclass C extends Component {\n  render() {\n    return (\n      // 以下两种写法均可\n      //   <ctx.Consumer>\n      //     {val => (\n      //       <div>\n      //         a:{val.a},b:{val.b}\n      //         <button onClick={val.add}>a++</button>\n      //       </div>\n      //     )}\n      //   </ctx.Consumer>\n      <ctx.Consumer\n        children={val => (\n          <div>\n            a:{val.a},b:{val.b}\n            <button onClick={val.add}>a++</button>\n          </div>\n        )}\n      />\n    );\n  }\n}\n\n// 函数组件获取上下文中的数据\nfunction D() {\n  return (\n    <ctx.Consumer>\n      {val => (\n        <>\n          <p>组件D</p>\n          <p>a:{val.a}</p>\n          <p>a:{val.b}</p>\n        </>\n      )}\n    </ctx.Consumer>\n  );\n}\n\nexport default class Context extends Component {\n  state = {\n    a: 123,\n    b: \"345\",\n    add: () => {\n      this.setState({\n        a: this.state.a + 1\n      });\n    }\n  };\n\n  render() {\n    return (\n      // ctx.Provider 不要使用多次，如果在别的组件也需要使用这个ctx.Provider，应该提升到更高的组件（两个组件的父组件中）\n      <ctx.Provider value={this.state}>\n        <A />\n      </ctx.Provider>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}