{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/marx/Downloads/react-test/practice/react/my-app/src/components/FormDemo/components/CheckboxGroup.js\";\nimport React from \"react\";\nimport PT from \"prop-types\";\nexport default function CheckboxGroup(props) {\n  function setValue(e, value) {\n    let values = [];\n\n    if (e.target.checked) {\n      values = [...props.value, value];\n    } else {\n      values = props.value.filter(v => v !== value);\n    }\n\n    props.onChange && props.onChange(values);\n  }\n\n  const boxs = props.options.map(o => /*#__PURE__*/_jsxDEV(\"label\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      checked: props.value.includes(o.value),\n      onChange: e => setValue(e, o.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), o.label]\n  }, o.value, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: boxs\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 10\n  }, this);\n} // CheckboxGroup.propTypes = {\n//   value: PT.arrayOf(\n//     PT.shape({\n//       label: PT.string,\n//       value: PT.string\n//     })\n//   )\n// };\n\n_c = CheckboxGroup;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckboxGroup\");","map":{"version":3,"sources":["/Users/marx/Downloads/react-test/practice/react/my-app/src/components/FormDemo/components/CheckboxGroup.js"],"names":["React","PT","CheckboxGroup","props","setValue","e","value","values","target","checked","filter","v","onChange","boxs","options","map","o","includes","label"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,YAAf;AAEA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC3C,WAASC,QAAT,CAAkBC,CAAlB,EAAqBC,KAArB,EAA4B;AAC1B,QAAIC,MAAM,GAAG,EAAb;;AACA,QAAIF,CAAC,CAACG,MAAF,CAASC,OAAb,EAAsB;AACpBF,MAAAA,MAAM,GAAG,CAAC,GAAGJ,KAAK,CAACG,KAAV,EAAiBA,KAAjB,CAAT;AACD,KAFD,MAEO;AACLC,MAAAA,MAAM,GAAGJ,KAAK,CAACG,KAAN,CAAYI,MAAZ,CAAmBC,CAAC,IAAIA,CAAC,KAAKL,KAA9B,CAAT;AACD;;AACDH,IAAAA,KAAK,CAACS,QAAN,IAAkBT,KAAK,CAACS,QAAN,CAAeL,MAAf,CAAlB;AACD;;AAED,QAAMM,IAAI,GAAGV,KAAK,CAACW,OAAN,CAAcC,GAAd,CAAkBC,CAAC,iBAC9B;AAAA,4BACE;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,OAAO,EAAEb,KAAK,CAACG,KAAN,CAAYW,QAAZ,CAAqBD,CAAC,CAACV,KAAvB,CAFX;AAGE,MAAA,QAAQ,EAAED,CAAC,IAAID,QAAQ,CAACC,CAAD,EAAIW,CAAC,CAACV,KAAN;AAHzB;AAAA;AAAA;AAAA;AAAA,YADF,EAMGU,CAAC,CAACE,KANL;AAAA,KAAYF,CAAC,CAACV,KAAd;AAAA;AAAA;AAAA;AAAA,UADW,CAAb;AAWA,sBAAO;AAAA,cAAMO;AAAN;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;KAhCwBX,a","sourcesContent":["import React from \"react\";\nimport PT from \"prop-types\";\n\nexport default function CheckboxGroup(props) {\n  function setValue(e, value) {\n    let values = [];\n    if (e.target.checked) {\n      values = [...props.value, value];\n    } else {\n      values = props.value.filter(v => v !== value);\n    }\n    props.onChange && props.onChange(values);\n  }\n\n  const boxs = props.options.map(o => (\n    <label key={o.value}>\n      <input\n        type=\"checkbox\"\n        checked={props.value.includes(o.value)}\n        onChange={e => setValue(e, o.value)}\n      />\n      {o.label}\n    </label>\n  ));\n\n  return <div>{boxs}</div>;\n}\n\n// CheckboxGroup.propTypes = {\n//   value: PT.arrayOf(\n//     PT.shape({\n//       label: PT.string,\n//       value: PT.string\n//     })\n//   )\n// };\n"]},"metadata":{},"sourceType":"module"}