{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/marx/Downloads/react-test/practice/react/my-app/src/components/Form/index.js\";\nimport React, { Component } from \"react\";\nexport default class Form extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: \"marx\",\n      say: \"哈哈\",\n      lovers: [\"写代码\"]\n    };\n\n    this.updateState = (key, value) => {\n      this.setState({\n        [key]: value\n      });\n    };\n\n    this.setLovers = (type, isSelect) => {\n      if (isSelect) {\n        return this.state.lovers.concat(type);\n      } else {\n        return this.state.lovers.filter(l => l !== type);\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: this.state.name,\n          onChange: e => this.updateState(\"name\", e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => this.updateState(\"say\", e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\\u54C8\\u54C8\",\n            children: \"\\u54C8\\u54C8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\\u5475\\u5475\",\n            children: \"\\u5475\\u5475\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\\u563F\\u563F\",\n            children: \"\\u563F\\u563F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"dianying\",\n          type: \"checkbox\",\n          value: this.state.lovers.includes(\"看电影\"),\n          onChange: e => this.updateState(\"lovers\", this.setLovers(\"看电影\", e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"dianying\",\n          children: \"\\u770B\\u7535\\u5F71\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: Object.keys(this.state).map(s => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [s, \"\\uFF1A\", this.state[s]]\n        }, s, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["/Users/marx/Downloads/react-test/practice/react/my-app/src/components/Form/index.js"],"names":["React","Component","Form","state","name","say","lovers","updateState","key","value","setState","setLovers","type","isSelect","concat","filter","l","render","e","target","includes","Object","keys","map","s"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,eAAe,MAAMC,IAAN,SAAmBD,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAC1CE,KAD0C,GAClC;AACNC,MAAAA,IAAI,EAAE,MADA;AAENC,MAAAA,GAAG,EAAE,IAFC;AAGNC,MAAAA,MAAM,EAAE,CAAC,KAAD;AAHF,KADkC;;AAAA,SAO1CC,WAP0C,GAO5B,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAC5B,WAAKC,QAAL,CAAc;AACZ,SAACF,GAAD,GAAOC;AADK,OAAd;AAGD,KAXyC;;AAAA,SAa1CE,SAb0C,GAa9B,CAACC,IAAD,EAAOC,QAAP,KAAoB;AAC9B,UAAIA,QAAJ,EAAc;AACZ,eAAO,KAAKV,KAAL,CAAWG,MAAX,CAAkBQ,MAAlB,CAAyBF,IAAzB,CAAP;AACD,OAFD,MAEO;AACL,eAAO,KAAKT,KAAL,CAAWG,MAAX,CAAkBS,MAAlB,CAAyBC,CAAC,IAAIA,CAAC,KAAKJ,IAApC,CAAP;AACD;AACF,KAnByC;AAAA;;AAqB1CK,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAA,gCACE;AACE,UAAA,KAAK,EAAE,KAAKd,KAAL,CAAWC,IADpB;AAEE,UAAA,QAAQ,EAAEc,CAAC,IAAI,KAAKX,WAAL,CAAiB,MAAjB,EAAyBW,CAAC,CAACC,MAAF,CAASV,KAAlC;AAFjB;AAAA;AAAA;AAAA;AAAA,gBADF,eAME;AAAQ,UAAA,QAAQ,EAAES,CAAC,IAAI,KAAKX,WAAL,CAAiB,KAAjB,EAAwBW,CAAC,CAACC,MAAF,CAASV,KAAjC,CAAvB;AAAA,kCACE;AAAQ,YAAA,KAAK,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAQ,YAAA,KAAK,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAQ,YAAA,KAAK,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF,eAYE;AACE,UAAA,EAAE,EAAC,UADL;AAEE,UAAA,IAAI,EAAC,UAFP;AAGE,UAAA,KAAK,EAAE,KAAKN,KAAL,CAAWG,MAAX,CAAkBc,QAAlB,CAA2B,KAA3B,CAHT;AAIE,UAAA,QAAQ,EAAEF,CAAC,IACT,KAAKX,WAAL,CACE,QADF,EAEE,KAAKI,SAAL,CAAe,KAAf,EAAsBO,CAAC,CAACC,MAAF,CAASV,KAA/B,CAFF;AALJ;AAAA;AAAA;AAAA;AAAA,gBAZF,eAuBE;AAAO,UAAA,GAAG,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eA2BE;AAAA,kBACGY,MAAM,CAACC,IAAP,CAAY,KAAKnB,KAAjB,EAAwBoB,GAAxB,CAA4BC,CAAC,iBAC5B;AAAA,qBACGA,CADH,YACO,KAAKrB,KAAL,CAAWqB,CAAX,CADP;AAAA,WAAQA,CAAR;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cA3BF;AAAA,oBADF;AAqCD;;AA3DyC","sourcesContent":["import React, { Component } from \"react\";\n\nexport default class Form extends Component {\n  state = {\n    name: \"marx\",\n    say: \"哈哈\",\n    lovers: [\"写代码\"]\n  };\n\n  updateState = (key, value) => {\n    this.setState({\n      [key]: value\n    });\n  };\n\n  setLovers = (type, isSelect) => {\n    if (isSelect) {\n      return this.state.lovers.concat(type);\n    } else {\n      return this.state.lovers.filter(l => l !== type);\n    }\n  };\n\n  render() {\n    return (\n      <>\n        <div>\n          <input\n            value={this.state.name}\n            onChange={e => this.updateState(\"name\", e.target.value)}\n          />\n\n          <select onChange={e => this.updateState(\"say\", e.target.value)}>\n            <option value=\"哈哈\">哈哈</option>\n            <option value=\"呵呵\">呵呵</option>\n            <option value=\"嘿嘿\">嘿嘿</option>\n          </select>\n\n          <input\n            id=\"dianying\"\n            type=\"checkbox\"\n            value={this.state.lovers.includes(\"看电影\")}\n            onChange={e =>\n              this.updateState(\n                \"lovers\",\n                this.setLovers(\"看电影\", e.target.value)\n              )\n            }\n          />\n          <label for=\"dianying\">看电影</label>\n        </div>\n\n        <div>\n          {Object.keys(this.state).map(s => (\n            <p key={s}>\n              {s}：{this.state[s]}\n            </p>\n          ))}\n        </div>\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}