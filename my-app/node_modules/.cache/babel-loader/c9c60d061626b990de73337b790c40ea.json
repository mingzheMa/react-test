{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/marx/Downloads/react-test/practice/react/my-app/src/components/Context/index.js\";\n// 新版api\nimport React, { Component } from \"react\";\nimport { ctx, ctx2 } from \"./context\";\n\nfunction A() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(B, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(C, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(D, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(E, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_c = A;\n\nclass B extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"a:\", this.context.a, \",b:\", this.context.b, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.context.add,\n        children: \"a++\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nB.contextType = ctx;\n\nclass C extends Component {\n  render() {\n    return (\n      /*#__PURE__*/\n      // 以下两种写法均可\n      //   <ctx.Consumer>\n      //     {val => (\n      //       <div>\n      //         a:{val.a},b:{val.b}\n      //         <button onClick={val.add}>a++</button>\n      //       </div>\n      //     )}\n      //   </ctx.Consumer>\n      _jsxDEV(ctx.Consumer, {\n        children: val => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"a:\", val.a, \",b:\", val.b, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: val.add,\n            children: \"a++\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this)\n    );\n  }\n\n} // 函数组件获取上下文中的数据\n\n\nfunction D() {\n  return /*#__PURE__*/_jsxDEV(ctx.Consumer, {\n    children: val => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u7EC4\\u4EF6D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"a:\", val.a]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"a:\", val.b]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = D;\n\nfunction E() {\n  return /*#__PURE__*/_jsxDEV(ctx.Consumer, {\n    children: val => /*#__PURE__*/_jsxDEV(ctx2.Consumer, {\n      children: val2 => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"a:\", val.a]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"b:\", val.b]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"c:\", val2.c]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"d:\", val2.d]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = E;\nexport default class Context extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      value: {\n        a: 123,\n        b: \"345\",\n        add: () => {\n          this.setState({\n            a: this.state.a + 1\n          });\n        }\n      }\n    };\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      // ctx.Provider 不要使用多次，如果在别的组件也需要使用这个ctx.Provider，应该提升到更高的组件（两个组件的父组件中）\n      _jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(ctx.Provider, {\n          value: this.state.value,\n          children: /*#__PURE__*/_jsxDEV(ctx2.Provider, {\n            value: {\n              c: \"c\",\n              d: \"d\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(A, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(F, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            this.setState({});\n          },\n          children: \"\\u4FEE\\u6539state\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true)\n    );\n  }\n\n}\n\nclass F extends Component {\n  //   返回布尔值决定是否触发runder\n  shouldComponentUpdate(nextProps, nextState) {\n    console.log(\"shouldComponentUpdate\");\n    return true;\n  }\n\n  render() {\n    console.log(\"runder\");\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"a:\", this.context.a, \",b:\", this.context.b]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nF.contextType = ctx;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"A\");\n$RefreshReg$(_c2, \"D\");\n$RefreshReg$(_c3, \"E\");","map":{"version":3,"sources":["/Users/marx/Downloads/react-test/practice/react/my-app/src/components/Context/index.js"],"names":["React","Component","ctx","ctx2","A","B","render","context","a","b","add","contextType","C","val","D","E","val2","c","d","Context","state","value","setState","F","shouldComponentUpdate","nextProps","nextState","console","log"],"mappings":"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","sourcesContent":["// 新版api\nimport React, { Component } from \"react\";\nimport { ctx, ctx2 } from \"./context\";\n\nfunction A() {\n  return (\n    <>\n      <B />\n      <C />\n      <D />\n      <E />\n    </>\n  );\n}\n\nclass B extends Component {\n  static contextType = ctx;\n\n  render() {\n    return (\n      <div>\n        a:{this.context.a},b:{this.context.b}\n        <button onClick={this.context.add}>a++</button>\n      </div>\n    );\n  }\n}\n\nclass C extends Component {\n  render() {\n    return (\n      // 以下两种写法均可\n      //   <ctx.Consumer>\n      //     {val => (\n      //       <div>\n      //         a:{val.a},b:{val.b}\n      //         <button onClick={val.add}>a++</button>\n      //       </div>\n      //     )}\n      //   </ctx.Consumer>\n      <ctx.Consumer\n        children={val => (\n          <div>\n            a:{val.a},b:{val.b}\n            <button onClick={val.add}>a++</button>\n          </div>\n        )}\n      />\n    );\n  }\n}\n\n// 函数组件获取上下文中的数据\nfunction D() {\n  return (\n    <ctx.Consumer>\n      {val => (\n        <>\n          <p>组件D</p>\n          <p>a:{val.a}</p>\n          <p>a:{val.b}</p>\n        </>\n      )}\n    </ctx.Consumer>\n  );\n}\n\nfunction E() {\n  return (\n    <ctx.Consumer>\n      {val => (\n        <ctx2.Consumer>\n          {val2 => (\n            <>\n              <p>a:{val.a}</p>\n              <p>b:{val.b}</p>\n              <p>c:{val2.c}</p>\n              <p>d:{val2.d}</p>\n            </>\n          )}\n        </ctx2.Consumer>\n      )}\n    </ctx.Consumer>\n  );\n}\n\nexport default class Context extends Component {\n  state = {\n    value: {\n      a: 123,\n      b: \"345\",\n      add: () => {\n        this.setState({\n          a: this.state.a + 1\n        });\n      }\n    }\n  };\n\n  render() {\n    return (\n      // ctx.Provider 不要使用多次，如果在别的组件也需要使用这个ctx.Provider，应该提升到更高的组件（两个组件的父组件中）\n      <>\n        <ctx.Provider value={this.state.value}>\n          <ctx2.Provider value={{ c: \"c\", d: \"d\" }}>\n            <A />\n            <F />\n          </ctx2.Provider>\n        </ctx.Provider>\n\n        {/* 修改context数据时为强制渲染，会绕过shouldComponentUpdate函数，解决方案就是把Context的数据放置state的属性中，setState的原理是合并之前和传入的对象并返回一个新对象，只要对象索引位置不变则判断不变 */}\n        <button\n          onClick={() => {\n            this.setState({});\n          }}>\n          修改state\n        </button>\n      </>\n    );\n  }\n}\n\nclass F extends Component {\n  static contextType = ctx;\n\n  //   返回布尔值决定是否触发runder\n  shouldComponentUpdate(nextProps, nextState) {\n    console.log(\"shouldComponentUpdate\");\n    return true;\n  }\n\n  render() {\n    console.log(\"runder\");\n    return (\n      <div>\n        a:{this.context.a},b:{this.context.b}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}