{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/marx/Downloads/react-test/practice/react/my-app/src/components/FormDemo/index.js\";\nimport React, { Component } from \"react\";\nimport Input from \"./components/Input\";\nimport Select from \"./components/Select\";\nexport default class Form extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: \"marx\",\n      say: \"haha\",\n      says: [{\n        label: \"嘿嘿\",\n        value: \"heihei\"\n      }, {\n        label: \"呵呵\",\n        value: \"hehe\"\n      }, {\n        label: \"哈哈\",\n        value: \"haha\"\n      }],\n      lovers: [],\n      six: \"男\"\n    };\n\n    this.updateState = (key, value) => {\n      this.setState({\n        [key]: value\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        value: this.state.name,\n        onChange: e => this.updateState(\"name\", e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        value: this.state.say,\n        options: this.state.says,\n        onChange: e => this.updateState(\"say\", e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: Object.keys(this.state).map(s => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [s, \"\\uFF1A\", this.state[s]]\n        }, s, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["/Users/marx/Downloads/react-test/practice/react/my-app/src/components/FormDemo/index.js"],"names":["React","Component","Input","Select","Form","state","name","say","says","label","value","lovers","six","updateState","key","setState","render","e","Object","keys","map","s"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AAEA,eAAe,MAAMC,IAAN,SAAmBH,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAC1CI,KAD0C,GAClC;AACNC,MAAAA,IAAI,EAAE,MADA;AAENC,MAAAA,GAAG,EAAE,MAFC;AAGNC,MAAAA,IAAI,EAAE,CACJ;AACEC,QAAAA,KAAK,EAAE,IADT;AAEEC,QAAAA,KAAK,EAAE;AAFT,OADI,EAKJ;AACED,QAAAA,KAAK,EAAE,IADT;AAEEC,QAAAA,KAAK,EAAE;AAFT,OALI,EASJ;AACED,QAAAA,KAAK,EAAE,IADT;AAEEC,QAAAA,KAAK,EAAE;AAFT,OATI,CAHA;AAiBNC,MAAAA,MAAM,EAAE,EAjBF;AAkBNC,MAAAA,GAAG,EAAE;AAlBC,KADkC;;AAAA,SAsB1CC,WAtB0C,GAsB5B,CAACC,GAAD,EAAMJ,KAAN,KAAgB;AAC5B,WAAKK,QAAL,CAAc;AACZ,SAACD,GAAD,GAAOJ;AADK,OAAd;AAGD,KA1ByC;AAAA;;AA4B1CM,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BAEE,QAAC,KAAD;AACE,QAAA,KAAK,EAAE,KAAKX,KAAL,CAAWC,IADpB;AAEE,QAAA,QAAQ,EAAEW,CAAC,IAAI,KAAKJ,WAAL,CAAiB,MAAjB,EAAyBI,CAAzB;AAFjB;AAAA;AAAA;AAAA;AAAA,cAFF,eAOE,QAAC,MAAD;AACE,QAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWE,GADpB;AAEE,QAAA,OAAO,EAAE,KAAKF,KAAL,CAAWG,IAFtB;AAGE,QAAA,QAAQ,EAAES,CAAC,IAAI,KAAKJ,WAAL,CAAiB,KAAjB,EAAwBI,CAAxB;AAHjB;AAAA;AAAA;AAAA;AAAA,cAPF,eAaE;AAAA,kBACGC,MAAM,CAACC,IAAP,CAAY,KAAKd,KAAjB,EAAwBe,GAAxB,CAA4BC,CAAC,iBAC5B;AAAA,qBACGA,CADH,YACO,KAAKhB,KAAL,CAAWgB,CAAX,CADP;AAAA,WAAQA,CAAR;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA,oBADF;AAwBD;;AArDyC","sourcesContent":["import React, { Component } from \"react\";\nimport Input from \"./components/Input\";\nimport Select from \"./components/Select\";\n\nexport default class Form extends Component {\n  state = {\n    name: \"marx\",\n    say: \"haha\",\n    says: [\n      {\n        label: \"嘿嘿\",\n        value: \"heihei\"\n      },\n      {\n        label: \"呵呵\",\n        value: \"hehe\"\n      },\n      {\n        label: \"哈哈\",\n        value: \"haha\"\n      }\n    ],\n    lovers: [],\n    six: \"男\"\n  };\n\n  updateState = (key, value) => {\n    this.setState({\n      [key]: value\n    });\n  };\n\n  render() {\n    return (\n      <>\n\n        <Input\n          value={this.state.name}\n          onChange={e => this.updateState(\"name\", e)}\n        />\n\n        <Select\n          value={this.state.say}\n          options={this.state.says}\n          onChange={e => this.updateState(\"say\", e)}\n        />\n\n        <div>\n          {Object.keys(this.state).map(s => (\n            <p key={s}>\n              {s}：{this.state[s]}\n            </p>\n          ))}\n        </div>\n        \n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}