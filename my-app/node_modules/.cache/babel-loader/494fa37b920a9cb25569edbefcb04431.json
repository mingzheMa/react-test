{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/marx/Downloads/react-test/practice/react/my-app/src/components/FormDemo/components/CheckboxGroup.js\";\nimport React from \"react\";\nimport PT from \"prop-types\";\nimport Checkbox from \"./Checkbox\";\nexport default function CheckboxGroup(props) {\n  function setValue(e, value) {\n    let values = [];\n\n    if (e.target.checked) {\n      values = [...props.value, value];\n    } else {\n      values = props.value.filter(v => v !== value);\n    }\n\n    props.onChange && props.onChange(values);\n  }\n\n  const boxs = props.options.map(o => /*#__PURE__*/_jsxDEV(Checkbox, {\n    checked: props.value.includes(o.value),\n    label: o.label,\n    onChange: e => setValue(e, o.value)\n  }, o.value, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: boxs\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 10\n  }, this);\n}\n_c = CheckboxGroup;\nCheckboxGroup.propTypes = {\n  value: PT.arrayOf(PT.string).isRequired,\n  options: PT.arrayOf(PT.shape({\n    label: PT.string,\n    value: PT.string\n  })).isRequired,\n  onChange: PT.func\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckboxGroup\");","map":{"version":3,"sources":["/Users/marx/Downloads/react-test/practice/react/my-app/src/components/FormDemo/components/CheckboxGroup.js"],"names":["React","PT","Checkbox","CheckboxGroup","props","setValue","e","value","values","target","checked","filter","v","onChange","boxs","options","map","o","includes","label","propTypes","arrayOf","string","isRequired","shape","func"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC3C,WAASC,QAAT,CAAkBC,CAAlB,EAAqBC,KAArB,EAA4B;AAC1B,QAAIC,MAAM,GAAG,EAAb;;AACA,QAAIF,CAAC,CAACG,MAAF,CAASC,OAAb,EAAsB;AACpBF,MAAAA,MAAM,GAAG,CAAC,GAAGJ,KAAK,CAACG,KAAV,EAAiBA,KAAjB,CAAT;AACD,KAFD,MAEO;AACLC,MAAAA,MAAM,GAAGJ,KAAK,CAACG,KAAN,CAAYI,MAAZ,CAAmBC,CAAC,IAAIA,CAAC,KAAKL,KAA9B,CAAT;AACD;;AACDH,IAAAA,KAAK,CAACS,QAAN,IAAkBT,KAAK,CAACS,QAAN,CAAeL,MAAf,CAAlB;AACD;;AAED,QAAMM,IAAI,GAAGV,KAAK,CAACW,OAAN,CAAcC,GAAd,CAAkBC,CAAC,iBAC9B,QAAC,QAAD;AAEE,IAAA,OAAO,EAAEb,KAAK,CAACG,KAAN,CAAYW,QAAZ,CAAqBD,CAAC,CAACV,KAAvB,CAFX;AAGE,IAAA,KAAK,EAAEU,CAAC,CAACE,KAHX;AAIE,IAAA,QAAQ,EAAEb,CAAC,IAAID,QAAQ,CAACC,CAAD,EAAIW,CAAC,CAACV,KAAN;AAJzB,KACOU,CAAC,CAACV,KADT;AAAA;AAAA;AAAA;AAAA,UADW,CAAb;AASA,sBAAO;AAAA,cAAMO;AAAN;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;KArBuBX,a;AAuBxBA,aAAa,CAACiB,SAAd,GAA0B;AACxBb,EAAAA,KAAK,EAAEN,EAAE,CAACoB,OAAH,CAAWpB,EAAE,CAACqB,MAAd,EAAsBC,UADL;AAExBR,EAAAA,OAAO,EAAEd,EAAE,CAACoB,OAAH,CACPpB,EAAE,CAACuB,KAAH,CAAS;AACPL,IAAAA,KAAK,EAAElB,EAAE,CAACqB,MADH;AAEPf,IAAAA,KAAK,EAAEN,EAAE,CAACqB;AAFH,GAAT,CADO,EAKPC,UAPsB;AAQxBV,EAAAA,QAAQ,EAAEZ,EAAE,CAACwB;AARW,CAA1B","sourcesContent":["import React from \"react\";\nimport PT from \"prop-types\";\nimport Checkbox from \"./Checkbox\";\n\nexport default function CheckboxGroup(props) {\n  function setValue(e, value) {\n    let values = [];\n    if (e.target.checked) {\n      values = [...props.value, value];\n    } else {\n      values = props.value.filter(v => v !== value);\n    }\n    props.onChange && props.onChange(values);\n  }\n\n  const boxs = props.options.map(o => (\n    <Checkbox\n      key={o.value}\n      checked={props.value.includes(o.value)}\n      label={o.label}\n      onChange={e => setValue(e, o.value)}\n    />\n  ));\n\n  return <div>{boxs}</div>;\n}\n\nCheckboxGroup.propTypes = {\n  value: PT.arrayOf(PT.string).isRequired,\n  options: PT.arrayOf(\n    PT.shape({\n      label: PT.string,\n      value: PT.string\n    })\n  ).isRequired,\n  onChange: PT.func\n};\n"]},"metadata":{},"sourceType":"module"}