{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/marx/Downloads/react-test/practice/react/my-app/src/components/FormDemo/index.js\";\nimport React, { Component } from \"react\";\nimport Input from \"./components/Input\";\nexport default class Form extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: \"marx\",\n      say: \"哈哈\",\n      lovers: [\"写代码\"],\n      six: \"男\"\n    };\n\n    this.updateState = (key, value) => {\n      this.setState({\n        [key]: value\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        value: this.state.name,\n        onChange: e => this.updateState(\"name\", e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}","map":{"version":3,"sources":["/Users/marx/Downloads/react-test/practice/react/my-app/src/components/FormDemo/index.js"],"names":["React","Component","Input","Form","state","name","say","lovers","six","updateState","key","value","setState","render","e"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,eAAe,MAAMC,IAAN,SAAmBF,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAC1CG,KAD0C,GAClC;AACNC,MAAAA,IAAI,EAAE,MADA;AAENC,MAAAA,GAAG,EAAE,IAFC;AAGNC,MAAAA,MAAM,EAAE,CAAC,KAAD,CAHF;AAINC,MAAAA,GAAG,EAAE;AAJC,KADkC;;AAAA,SAQ1CC,WAR0C,GAQ5B,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAC5B,WAAKC,QAAL,CAAc;AACZ,SAACF,GAAD,GAAOC;AADK,OAAd;AAGD,KAZyC;AAAA;;AAc1CE,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,6BACE,QAAC,KAAD;AACE,QAAA,KAAK,EAAE,KAAKT,KAAL,CAAWC,IADpB;AAEE,QAAA,QAAQ,EAAES,CAAC,IAAI,KAAKL,WAAL,CAAiB,MAAjB,EAAyBK,CAAzB;AAFjB;AAAA;AAAA;AAAA;AAAA;AADF,qBADF;AAQD;;AAvByC","sourcesContent":["import React, { Component } from \"react\";\nimport Input from \"./components/Input\";\n\nexport default class Form extends Component {\n  state = {\n    name: \"marx\",\n    say: \"哈哈\",\n    lovers: [\"写代码\"],\n    six: \"男\"\n  };\n\n  updateState = (key, value) => {\n    this.setState({\n      [key]: value\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <Input\n          value={this.state.name}\n          onChange={e => this.updateState(\"name\", e)}\n        />\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}